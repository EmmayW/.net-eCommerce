@model List<MedGearMart.Models.ViewModels.CartViewModel>

@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container mt-4">
    <h2>Your Shopping Cart</h2>

    @if (Model.Any())
    {
        <form id="cart-form" method="post">
            <table class="table">
                <thead>
                    <tr>
                        <th width="35%">Product</th>
                        <th width="10%">Price</th>
                        <th width="15%">Quantity</th>
                        <th width="15%">Total</th>
                        <th width="15%">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Product.GearName</td>
                            <td>@item.Product.Price.ToString("C")</td>
                            <td>
                                <div class="input-group">
                                    <button type="button" class="btn btn-outline-secondary" onclick="changeQuantity(@item.Product.GearId, -1)" >-</button>
                                    <input type="number" id="quantity-@item.Product.GearId" name="items[@item.Product.GearId].Quantity" value="@item.Quantity" min="1" class="form-control text-center" disabled max="@item.Product.Stock" />
                                    <button type="button" class="btn btn-outline-secondary" onclick="changeQuantity(@item.Product.GearId, 1)" >+</button>
                                </div>
                            </td>
                            
                            <td>
                                @((item.Product.Price * item.Quantity).ToString("C"))
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger" onclick="removeItem(@item.Product.GearId)">Remove</button>
                            </td>

                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-right">Total</td>
                        <td>
                            @Model.Sum(item => item.Product.Price * item.Quantity).ToString("C")
                        </td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>

            <div class="d-flex justify-content-between">
                <a asp-controller="Gears" asp-action="Index" class="btn btn-primary">Continue Shopping</a>
                @*<a class="btn btn-primary"><i class="fa fa-check" aria-hidden="true"></i> Check Out</a>*@
                <a asp-controller="Carts" asp-action="Checkout" class="btn btn-primary">
                    <i class="fa fa-check" aria-hidden="true"></i> Check Out
                </a>
            </div>
        </form>
    }
    else
    {
        <p>Your cart is empty.</p>
    }
</div>

@section Scripts {
   
    <script>
        function changeQuantity(productId, delta) {
            var quantityInput = $('#quantity-' + productId);
            var newQuantity = parseInt(quantityInput.val()) + delta;
            
            if (newQuantity > 0 && newQuantity <= parseInt(quantityInput.attr("max") || 0)) {
                quantityInput.val(newQuantity);
                updateCart(productId, newQuantity);
            } else {
                alert("Incorrect Product Qunantity!")
            }
        }

        function updateCart(productId, quantity) {
            $.ajax({
                url: '@Url.Action("UpdateCart", "Carts")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ id: productId, quantity: quantity }),
                success: function () {
                    location.reload(); // Reload the page to reflect changes
                },
                error: function (xhr, status, error) {
                    console.error("Error updating cart: " + error);
                }
            });
        }

        function removeItem(productId) {
            $.ajax({
                url: '@Url.Action("RemoveItem", "Carts")'+'/'+productId,
                type: 'POST',
                contentType: 'application/json',
               // data: JSON.stringify({ id: productId }),
                success: function () {
                    location.reload(); // Reload the page to reflect changes
                },
                error: function (xhr, status, error) {
                    console.error("Error removing item: " + error);
                }
            });
        }

    </script>
}
