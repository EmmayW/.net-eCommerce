@using MedGearMart.Models.ViewModels
@model PaginatedList<MedGearMart.Models.DomainModel.Gear>

@{
    ViewData["Title"] = "Product List";
    var category = Context.Request.Query["category"].ToString();
    var search = Context.Request.Query["search"].ToString();
}

<h1>Product List</h1>

<!-- Search Form -->
<form method="get" asp-action="Index">
    <div class="row">
        <div class="col-md-4 mb-2 col-sm-12">
            <input type="text" name="search" class="form-control" placeholder="Search by product name" value="@search" />
        </div>
        <div class="col-md-4 mb-2 col-sm-12">
            <select name="category" class="form-control">
                <option value="" selected="@(category=="")">All Categories</option>
                @foreach (var categoryItem in ViewBag.Categories as List<SelectListItem>)
                {
                    <option value="@categoryItem.Value" selected="@(categoryItem.Value == category)">
                        @categoryItem.Text
                    </option>
                }
            </select>
        </div>
        <div class="col-md-2 mb-2 col-sm-12">
            <button type="submit" class="btn btn-primary w-100"><i class="fa fa-filter" aria-hidden="true"></i>Search</button>
        </div>
        <div class="col-md-2 mb-2 col-sm-12">
            <a  class="btn btn-primary w-100" asp-action="Index" asp-controller="Gears">
                <i class="fa fa-refresh" aria-hidden="true"></i>Clear</a>
        </div>
    </div>
</form>

<!-- Sorting Links -->
<div class="row mt-4">
    <div class="col-md-12">
        <div class="float-right">
            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" class="btn btn-secondary"><i class="fa fa-sort" aria-hidden="true"></i>Sort by Name</a>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" class="btn btn-secondary"><i class="fa fa-sort" aria-hidden="true"></i>Sort by Price</a>
        </div>
    </div>
</div>

<!-- Product List -->
<div class="row mt-4">
    @foreach (var item in Model)
    {
        <div class="col-md-4 mb-4">
            <div class="card">
                <img src="~/imgs/@item.ImageUrl" class="card-img-top" alt="@item.GearName" style="max-height: 200px; object-fit: cover;" />
                <div class="card-body">
                    <h5 class="card-title"><a asp-action="Details" asp-route-id="@item.GearId">@item.GearName</a></h5>
                    <p class="card-text">@item.Description</p>
                    <p class="card-text"><strong>Price:</strong> @item.Price.ToString("C")</p>
                    <p class="card-text"><strong>Stock:</strong> @item.Stock</p>
                    <p class="card-text"><strong>Category:</strong> @item.Category?.CategoryName</p>
                    <form asp-action="AddToCart" asp-route-id="@item.GearId" asp-controller="Carts" method="post">
                        <button type="submit" class="btn btn-primary">Add To Cart</button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>

<!-- Pagination Controls -->
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
