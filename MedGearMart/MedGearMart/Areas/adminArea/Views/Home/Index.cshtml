@model MedGearMart.Models.ViewModels.OverviewViewModel

@{
    ViewData["Title"] = "Help Home";
}

@section Header {

}

<div class="container">
    <h1>Sales Overview</h1>

    <div class="row">
        <div class="col-md-6 d-flex flex-column align-items-center" style="box-sizing: border-box; padding: 20px;">
            <div style="width:100%; height: 450px; border: 1px solid black; display: flex; justify-content: center; align-items: center;">
                <div style="width: 90%; height: 90%;">
                    <h3 class="text-center">Monthly Sales</h3>
                    <canvas id="monthlySalesChart" style="max-width: 100%; max-height: 100%;"></canvas>
                </div>
            </div>
        </div>

        <div class="col-md-6 d-flex flex-column align-items-center" style="box-sizing: border-box; padding: 20px;">
            <div style="width:100%; height: 450px; border: 1px solid black; display: flex; justify-content: center; align-items: center;">
                <div style="width: 90%; height: 90%;">
                    <h3 class="text-center">Orders Per Month</h3>
                    <canvas id="ordersPerMonthChart" style="max-width: 100%; max-height: 100%;"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 d-flex flex-column align-items-center" style="box-sizing: border-box; padding: 20px;">
            <div style="width:100%; height: 450px; border: 1px solid black; display: flex; justify-content: center; align-items: center;">
                <div style="width: 90%; height: 90%;">
                    <h3 class="text-center">Revenue Per Month</h3>
                    <canvas id="revenuePerMonthChart" style="max-width: 100%; max-height: 100%;"></canvas>
                </div>
            </div>
        </div>

        <div class="col-md-6 d-flex flex-column align-items-center" style="box-sizing: border-box; padding: 20px;">
            <div style="width:100%; height: 450px; border: 1px solid black; display: flex; justify-content: center; align-items: center;">
                <div style="width: 90%; height: 90%;">
                    <h3 class="text-center">Average Order Value</h3>
                    <canvas id="avgOrderValueChart" style="max-width: 100%; max-height: 100%;"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Monthly Sales Chart
    var ctx1 = document.getElementById('monthlySalesChart').getContext('2d');
    var monthlySalesChart = new Chart(ctx1, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Months)),
            datasets: [{
                label: 'Monthly Sales',
                data: @Html.Raw(Json.Serialize(Model.MonthlySales)),
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Orders Per Month Chart
    var ctx2 = document.getElementById('ordersPerMonthChart').getContext('2d');
    var ordersPerMonthChart = new Chart(ctx2, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Months)),
            datasets: [{
                label: 'Orders Per Month',
                data: @Html.Raw(Json.Serialize(Model.MonthlyOrders)),
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Revenue Per Month Chart
    var ctx3 = document.getElementById('revenuePerMonthChart').getContext('2d');
    var revenuePerMonthChart = new Chart(ctx3, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Months)),
            datasets: [{
                label: 'Revenue Per Month',
                data: @Html.Raw(Json.Serialize(Model.MonthlyRevenue)),
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Average Order Value Chart
    var ctx4 = document.getElementById('avgOrderValueChart').getContext('2d');
    var avgOrderValueChart = new Chart(ctx4, {
        type: 'pie',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Months)),
            datasets: [{
                label: 'Average Order Value',
                data: @Html.Raw(Json.Serialize(Model.AverageOrderValue)),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 99, 132, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255, 99, 132, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            maintainAspectRatio: false,  // Disable aspect ratio to fit within the container
            responsive: true,
            layout: {
                padding: {
                    top: 20,
                    bottom: 20
                }
            }
        }
    });
</script>

